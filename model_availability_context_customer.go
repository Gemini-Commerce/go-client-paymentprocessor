/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the AvailabilityContextCustomer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AvailabilityContextCustomer{}

// AvailabilityContextCustomer struct for AvailabilityContextCustomer
type AvailabilityContextCustomer struct {
	Segments []string `json:"segments,omitempty"`
	Email *string `json:"email,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AvailabilityContextCustomer AvailabilityContextCustomer

// NewAvailabilityContextCustomer instantiates a new AvailabilityContextCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAvailabilityContextCustomer() *AvailabilityContextCustomer {
	this := AvailabilityContextCustomer{}
	return &this
}

// NewAvailabilityContextCustomerWithDefaults instantiates a new AvailabilityContextCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAvailabilityContextCustomerWithDefaults() *AvailabilityContextCustomer {
	this := AvailabilityContextCustomer{}
	return &this
}

// GetSegments returns the Segments field value if set, zero value otherwise.
func (o *AvailabilityContextCustomer) GetSegments() []string {
	if o == nil || IsNil(o.Segments) {
		var ret []string
		return ret
	}
	return o.Segments
}

// GetSegmentsOk returns a tuple with the Segments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityContextCustomer) GetSegmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Segments) {
		return nil, false
	}
	return o.Segments, true
}

// &#39;Has&#39;Segments returns a boolean if a field has been set.
func (o *AvailabilityContextCustomer) &#39;Has&#39;Segments() bool {
	if o != nil && !IsNil(o.Segments) {
		return true
	}

	return false
}

// SetSegments gets a reference to the given []string and assigns it to the Segments field.
func (o *AvailabilityContextCustomer) SetSegments(v []string) {
	o.Segments = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AvailabilityContextCustomer) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AvailabilityContextCustomer) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// &#39;Has&#39;Email returns a boolean if a field has been set.
func (o *AvailabilityContextCustomer) &#39;Has&#39;Email() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AvailabilityContextCustomer) SetEmail(v string) {
	o.Email = &v
}

func (o AvailabilityContextCustomer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AvailabilityContextCustomer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Segments) {
		toSerialize["segments"] = o.Segments
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AvailabilityContextCustomer) UnmarshalJSON(data []byte) (err error) {
	varAvailabilityContextCustomer := _AvailabilityContextCustomer{}

	err = json.Unmarshal(data, &varAvailabilityContextCustomer)

	if err != nil {
		return err
	}

	*o = AvailabilityContextCustomer(varAvailabilityContextCustomer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "segments")
		delete(additionalProperties, "email")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *AvailabilityContextCustomer) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *AvailabilityContextCustomer) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableAvailabilityContextCustomer struct {
	value *AvailabilityContextCustomer
	isSet bool
}

func (v NullableAvailabilityContextCustomer) Get() *AvailabilityContextCustomer {
	return v.value
}

func (v *NullableAvailabilityContextCustomer) Set(val *AvailabilityContextCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableAvailabilityContextCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableAvailabilityContextCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAvailabilityContextCustomer(val *AvailabilityContextCustomer) *NullableAvailabilityContextCustomer {
	return &NullableAvailabilityContextCustomer{value: val, isSet: true}
}

func (v NullableAvailabilityContextCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAvailabilityContextCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


