/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the PaymentprocessorPaymentMethodRestrictionCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorPaymentMethodRestrictionCondition{}

// PaymentprocessorPaymentMethodRestrictionCondition struct for PaymentprocessorPaymentMethodRestrictionCondition
type PaymentprocessorPaymentMethodRestrictionCondition struct {
	ContextPath *string `json:"contextPath,omitempty"`
	Action *ConditionAction `json:"action,omitempty"`
	Condition *PaymentMethodRestrictionConditionCondition `json:"condition,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewPaymentprocessorPaymentMethodRestrictionCondition instantiates a new PaymentprocessorPaymentMethodRestrictionCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorPaymentMethodRestrictionCondition() *PaymentprocessorPaymentMethodRestrictionCondition {
	this := PaymentprocessorPaymentMethodRestrictionCondition{}
	var action ConditionAction = CONDITIONACTION_DISALLOW
	this.Action = &action
	var condition PaymentMethodRestrictionConditionCondition = PAYMENTMETHODRESTRICTIONCONDITIONCONDITION_IN
	this.Condition = &condition
	return &this
}

// NewPaymentprocessorPaymentMethodRestrictionConditionWithDefaults instantiates a new PaymentprocessorPaymentMethodRestrictionCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorPaymentMethodRestrictionConditionWithDefaults() *PaymentprocessorPaymentMethodRestrictionCondition {
	this := PaymentprocessorPaymentMethodRestrictionCondition{}
	var action ConditionAction = CONDITIONACTION_DISALLOW
	this.Action = &action
	var condition PaymentMethodRestrictionConditionCondition = PAYMENTMETHODRESTRICTIONCONDITIONCONDITION_IN
	this.Condition = &condition
	return &this
}

// GetContextPath returns the ContextPath field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetContextPath() string {
	if o == nil || IsNil(o.ContextPath) {
		var ret string
		return ret
	}
	return *o.ContextPath
}

// GetContextPathOk returns a tuple with the ContextPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetContextPathOk() (*string, bool) {
	if o == nil || IsNil(o.ContextPath) {
		return nil, false
	}
	return o.ContextPath, true
}

// HasContextPath returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) HasContextPath() bool {
	if o != nil && !IsNil(o.ContextPath) {
		return true
	}

	return false
}

// SetContextPath gets a reference to the given string and assigns it to the ContextPath field.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) SetContextPath(v string) {
	o.ContextPath = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetAction() ConditionAction {
	if o == nil || IsNil(o.Action) {
		var ret ConditionAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetActionOk() (*ConditionAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given ConditionAction and assigns it to the Action field.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) SetAction(v ConditionAction) {
	o.Action = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetCondition() PaymentMethodRestrictionConditionCondition {
	if o == nil || IsNil(o.Condition) {
		var ret PaymentMethodRestrictionConditionCondition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetConditionOk() (*PaymentMethodRestrictionConditionCondition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given PaymentMethodRestrictionConditionCondition and assigns it to the Condition field.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) SetCondition(v PaymentMethodRestrictionConditionCondition) {
	o.Condition = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *PaymentprocessorPaymentMethodRestrictionCondition) SetValues(v []string) {
	o.Values = v
}

func (o PaymentprocessorPaymentMethodRestrictionCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorPaymentMethodRestrictionCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContextPath) {
		toSerialize["contextPath"] = o.ContextPath
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullablePaymentprocessorPaymentMethodRestrictionCondition struct {
	value *PaymentprocessorPaymentMethodRestrictionCondition
	isSet bool
}

func (v NullablePaymentprocessorPaymentMethodRestrictionCondition) Get() *PaymentprocessorPaymentMethodRestrictionCondition {
	return v.value
}

func (v *NullablePaymentprocessorPaymentMethodRestrictionCondition) Set(val *PaymentprocessorPaymentMethodRestrictionCondition) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorPaymentMethodRestrictionCondition) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorPaymentMethodRestrictionCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorPaymentMethodRestrictionCondition(val *PaymentprocessorPaymentMethodRestrictionCondition) *NullablePaymentprocessorPaymentMethodRestrictionCondition {
	return &NullablePaymentprocessorPaymentMethodRestrictionCondition{value: val, isSet: true}
}

func (v NullablePaymentprocessorPaymentMethodRestrictionCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorPaymentMethodRestrictionCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


