/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the PaymentprocessorPaymentMethodRestriction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorPaymentMethodRestriction{}

// PaymentprocessorPaymentMethodRestriction struct for PaymentprocessorPaymentMethodRestriction
type PaymentprocessorPaymentMethodRestriction struct {
	Conditions []PaymentprocessorPaymentMethodRestrictionCondition `json:"conditions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentprocessorPaymentMethodRestriction PaymentprocessorPaymentMethodRestriction

// NewPaymentprocessorPaymentMethodRestriction instantiates a new PaymentprocessorPaymentMethodRestriction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorPaymentMethodRestriction() *PaymentprocessorPaymentMethodRestriction {
	this := PaymentprocessorPaymentMethodRestriction{}
	return &this
}

// NewPaymentprocessorPaymentMethodRestrictionWithDefaults instantiates a new PaymentprocessorPaymentMethodRestriction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorPaymentMethodRestrictionWithDefaults() *PaymentprocessorPaymentMethodRestriction {
	this := PaymentprocessorPaymentMethodRestriction{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentMethodRestriction) GetConditions() []PaymentprocessorPaymentMethodRestrictionCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []PaymentprocessorPaymentMethodRestrictionCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentMethodRestriction) GetConditionsOk() ([]PaymentprocessorPaymentMethodRestrictionCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentMethodRestriction) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []PaymentprocessorPaymentMethodRestrictionCondition and assigns it to the Conditions field.
func (o *PaymentprocessorPaymentMethodRestriction) SetConditions(v []PaymentprocessorPaymentMethodRestrictionCondition) {
	o.Conditions = v
}

func (o PaymentprocessorPaymentMethodRestriction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorPaymentMethodRestriction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentprocessorPaymentMethodRestriction) UnmarshalJSON(data []byte) (err error) {
	varPaymentprocessorPaymentMethodRestriction := _PaymentprocessorPaymentMethodRestriction{}

	err = json.Unmarshal(data, &varPaymentprocessorPaymentMethodRestriction)

	if err != nil {
		return err
	}

	*o = PaymentprocessorPaymentMethodRestriction(varPaymentprocessorPaymentMethodRestriction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "conditions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentprocessorPaymentMethodRestriction) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PaymentprocessorPaymentMethodRestriction) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePaymentprocessorPaymentMethodRestriction struct {
	value *PaymentprocessorPaymentMethodRestriction
	isSet bool
}

func (v NullablePaymentprocessorPaymentMethodRestriction) Get() *PaymentprocessorPaymentMethodRestriction {
	return v.value
}

func (v *NullablePaymentprocessorPaymentMethodRestriction) Set(val *PaymentprocessorPaymentMethodRestriction) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorPaymentMethodRestriction) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorPaymentMethodRestriction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorPaymentMethodRestriction(val *PaymentprocessorPaymentMethodRestriction) *NullablePaymentprocessorPaymentMethodRestriction {
	return &NullablePaymentprocessorPaymentMethodRestriction{value: val, isSet: true}
}

func (v NullablePaymentprocessorPaymentMethodRestriction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorPaymentMethodRestriction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


