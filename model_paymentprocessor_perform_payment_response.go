/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the PaymentprocessorPerformPaymentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorPerformPaymentResponse{}

// PaymentprocessorPerformPaymentResponse struct for PaymentprocessorPerformPaymentResponse
type PaymentprocessorPerformPaymentResponse struct {
	IsUpfront *bool `json:"isUpfront,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentprocessorPerformPaymentResponse PaymentprocessorPerformPaymentResponse

// NewPaymentprocessorPerformPaymentResponse instantiates a new PaymentprocessorPerformPaymentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorPerformPaymentResponse() *PaymentprocessorPerformPaymentResponse {
	this := PaymentprocessorPerformPaymentResponse{}
	return &this
}

// NewPaymentprocessorPerformPaymentResponseWithDefaults instantiates a new PaymentprocessorPerformPaymentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorPerformPaymentResponseWithDefaults() *PaymentprocessorPerformPaymentResponse {
	this := PaymentprocessorPerformPaymentResponse{}
	return &this
}

// GetIsUpfront returns the IsUpfront field value if set, zero value otherwise.
func (o *PaymentprocessorPerformPaymentResponse) GetIsUpfront() bool {
	if o == nil || IsNil(o.IsUpfront) {
		var ret bool
		return ret
	}
	return *o.IsUpfront
}

// GetIsUpfrontOk returns a tuple with the IsUpfront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPerformPaymentResponse) GetIsUpfrontOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUpfront) {
		return nil, false
	}
	return o.IsUpfront, true
}

// &#39;Has&#39;IsUpfront returns a boolean if a field has been set.
func (o *PaymentprocessorPerformPaymentResponse) &#39;Has&#39;IsUpfront() bool {
	if o != nil && !IsNil(o.IsUpfront) {
		return true
	}

	return false
}

// SetIsUpfront gets a reference to the given bool and assigns it to the IsUpfront field.
func (o *PaymentprocessorPerformPaymentResponse) SetIsUpfront(v bool) {
	o.IsUpfront = &v
}

func (o PaymentprocessorPerformPaymentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorPerformPaymentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsUpfront) {
		toSerialize["isUpfront"] = o.IsUpfront
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentprocessorPerformPaymentResponse) UnmarshalJSON(data []byte) (err error) {
	varPaymentprocessorPerformPaymentResponse := _PaymentprocessorPerformPaymentResponse{}

	err = json.Unmarshal(data, &varPaymentprocessorPerformPaymentResponse)

	if err != nil {
		return err
	}

	*o = PaymentprocessorPerformPaymentResponse(varPaymentprocessorPerformPaymentResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isUpfront")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentprocessorPerformPaymentResponse) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PaymentprocessorPerformPaymentResponse) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePaymentprocessorPerformPaymentResponse struct {
	value *PaymentprocessorPerformPaymentResponse
	isSet bool
}

func (v NullablePaymentprocessorPerformPaymentResponse) Get() *PaymentprocessorPerformPaymentResponse {
	return v.value
}

func (v *NullablePaymentprocessorPerformPaymentResponse) Set(val *PaymentprocessorPerformPaymentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorPerformPaymentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorPerformPaymentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorPerformPaymentResponse(val *PaymentprocessorPerformPaymentResponse) *NullablePaymentprocessorPerformPaymentResponse {
	return &NullablePaymentprocessorPerformPaymentResponse{value: val, isSet: true}
}

func (v NullablePaymentprocessorPerformPaymentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorPerformPaymentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


