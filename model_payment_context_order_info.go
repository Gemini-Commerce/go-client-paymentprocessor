/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PaymentContextOrderInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentContextOrderInfo{}

// PaymentContextOrderInfo struct for PaymentContextOrderInfo
type PaymentContextOrderInfo struct {
	Number string `json:"number"`
	Grn string `json:"grn"`
	Items []PaymentprocessorItem `json:"items,omitempty"`
}

type _PaymentContextOrderInfo PaymentContextOrderInfo

// NewPaymentContextOrderInfo instantiates a new PaymentContextOrderInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentContextOrderInfo(number string, grn string) *PaymentContextOrderInfo {
	this := PaymentContextOrderInfo{}
	this.Number = number
	this.Grn = grn
	return &this
}

// NewPaymentContextOrderInfoWithDefaults instantiates a new PaymentContextOrderInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentContextOrderInfoWithDefaults() *PaymentContextOrderInfo {
	this := PaymentContextOrderInfo{}
	return &this
}

// GetNumber returns the Number field value
func (o *PaymentContextOrderInfo) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *PaymentContextOrderInfo) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *PaymentContextOrderInfo) SetNumber(v string) {
	o.Number = v
}

// GetGrn returns the Grn field value
func (o *PaymentContextOrderInfo) GetGrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Grn
}

// GetGrnOk returns a tuple with the Grn field value
// and a boolean to check if the value has been set.
func (o *PaymentContextOrderInfo) GetGrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grn, true
}

// SetGrn sets field value
func (o *PaymentContextOrderInfo) SetGrn(v string) {
	o.Grn = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PaymentContextOrderInfo) GetItems() []PaymentprocessorItem {
	if o == nil || IsNil(o.Items) {
		var ret []PaymentprocessorItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentContextOrderInfo) GetItemsOk() ([]PaymentprocessorItem, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PaymentContextOrderInfo) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []PaymentprocessorItem and assigns it to the Items field.
func (o *PaymentContextOrderInfo) SetItems(v []PaymentprocessorItem) {
	o.Items = v
}

func (o PaymentContextOrderInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentContextOrderInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["number"] = o.Number
	toSerialize["grn"] = o.Grn
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return toSerialize, nil
}

func (o *PaymentContextOrderInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"number",
		"grn",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentContextOrderInfo := _PaymentContextOrderInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPaymentContextOrderInfo)

	if err != nil {
		return err
	}

	*o = PaymentContextOrderInfo(varPaymentContextOrderInfo)

	return err
}

type NullablePaymentContextOrderInfo struct {
	value *PaymentContextOrderInfo
	isSet bool
}

func (v NullablePaymentContextOrderInfo) Get() *PaymentContextOrderInfo {
	return v.value
}

func (v *NullablePaymentContextOrderInfo) Set(val *PaymentContextOrderInfo) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentContextOrderInfo) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentContextOrderInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentContextOrderInfo(val *PaymentContextOrderInfo) *NullablePaymentContextOrderInfo {
	return &NullablePaymentContextOrderInfo{value: val, isSet: true}
}

func (v NullablePaymentContextOrderInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentContextOrderInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


