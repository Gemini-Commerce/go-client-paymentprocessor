/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
	"fmt"
)

// checks if the PaymentprocessorVoidPaymentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorVoidPaymentRequest{}

// PaymentprocessorVoidPaymentRequest struct for PaymentprocessorVoidPaymentRequest
type PaymentprocessorVoidPaymentRequest struct {
	TenantId string `json:"tenantId"`
	PaymentId *string `json:"paymentId,omitempty"`
	// payment type stripe, paypal..
	Code string `json:"code"`
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	Transactions []PaymentprocessorTransaction `json:"transactions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentprocessorVoidPaymentRequest PaymentprocessorVoidPaymentRequest

// NewPaymentprocessorVoidPaymentRequest instantiates a new PaymentprocessorVoidPaymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorVoidPaymentRequest(tenantId string, code string) *PaymentprocessorVoidPaymentRequest {
	this := PaymentprocessorVoidPaymentRequest{}
	this.TenantId = tenantId
	this.Code = code
	return &this
}

// NewPaymentprocessorVoidPaymentRequestWithDefaults instantiates a new PaymentprocessorVoidPaymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorVoidPaymentRequestWithDefaults() *PaymentprocessorVoidPaymentRequest {
	this := PaymentprocessorVoidPaymentRequest{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *PaymentprocessorVoidPaymentRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *PaymentprocessorVoidPaymentRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *PaymentprocessorVoidPaymentRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *PaymentprocessorVoidPaymentRequest) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorVoidPaymentRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// &#39;Has&#39;PaymentId returns a boolean if a field has been set.
func (o *PaymentprocessorVoidPaymentRequest) &#39;Has&#39;PaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *PaymentprocessorVoidPaymentRequest) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetCode returns the Code field value
func (o *PaymentprocessorVoidPaymentRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PaymentprocessorVoidPaymentRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PaymentprocessorVoidPaymentRequest) SetCode(v string) {
	o.Code = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *PaymentprocessorVoidPaymentRequest) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorVoidPaymentRequest) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// &#39;Has&#39;AdditionalInfo returns a boolean if a field has been set.
func (o *PaymentprocessorVoidPaymentRequest) &#39;Has&#39;AdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *PaymentprocessorVoidPaymentRequest) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *PaymentprocessorVoidPaymentRequest) GetTransactions() []PaymentprocessorTransaction {
	if o == nil || IsNil(o.Transactions) {
		var ret []PaymentprocessorTransaction
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorVoidPaymentRequest) GetTransactionsOk() ([]PaymentprocessorTransaction, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// &#39;Has&#39;Transactions returns a boolean if a field has been set.
func (o *PaymentprocessorVoidPaymentRequest) &#39;Has&#39;Transactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []PaymentprocessorTransaction and assigns it to the Transactions field.
func (o *PaymentprocessorVoidPaymentRequest) SetTransactions(v []PaymentprocessorTransaction) {
	o.Transactions = v
}

func (o PaymentprocessorVoidPaymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorVoidPaymentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	if !IsNil(o.PaymentId) {
		toSerialize["paymentId"] = o.PaymentId
	}
	toSerialize["code"] = o.Code
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentprocessorVoidPaymentRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPaymentprocessorVoidPaymentRequest := _PaymentprocessorVoidPaymentRequest{}

	err = json.Unmarshal(data, &varPaymentprocessorVoidPaymentRequest)

	if err != nil {
		return err
	}

	*o = PaymentprocessorVoidPaymentRequest(varPaymentprocessorVoidPaymentRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "paymentId")
		delete(additionalProperties, "code")
		delete(additionalProperties, "additionalInfo")
		delete(additionalProperties, "transactions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentprocessorVoidPaymentRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PaymentprocessorVoidPaymentRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePaymentprocessorVoidPaymentRequest struct {
	value *PaymentprocessorVoidPaymentRequest
	isSet bool
}

func (v NullablePaymentprocessorVoidPaymentRequest) Get() *PaymentprocessorVoidPaymentRequest {
	return v.value
}

func (v *NullablePaymentprocessorVoidPaymentRequest) Set(val *PaymentprocessorVoidPaymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorVoidPaymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorVoidPaymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorVoidPaymentRequest(val *PaymentprocessorVoidPaymentRequest) *NullablePaymentprocessorVoidPaymentRequest {
	return &NullablePaymentprocessorVoidPaymentRequest{value: val, isSet: true}
}

func (v NullablePaymentprocessorVoidPaymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorVoidPaymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


