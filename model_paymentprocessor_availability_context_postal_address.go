/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the PaymentprocessorAvailabilityContextPostalAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorAvailabilityContextPostalAddress{}

// PaymentprocessorAvailabilityContextPostalAddress struct for PaymentprocessorAvailabilityContextPostalAddress
type PaymentprocessorAvailabilityContextPostalAddress struct {
	RegionCode *string `json:"regionCode,omitempty"`
	PostalCode *string `json:"postalCode,omitempty"`
	Firstname *string `json:"firstname,omitempty"`
	Lastname *string `json:"lastname,omitempty"`
	AddressLines []string `json:"addressLines,omitempty"`
	AdditionalInfo map[string]interface{} `json:"additionalInfo,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentprocessorAvailabilityContextPostalAddress PaymentprocessorAvailabilityContextPostalAddress

// NewPaymentprocessorAvailabilityContextPostalAddress instantiates a new PaymentprocessorAvailabilityContextPostalAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorAvailabilityContextPostalAddress() *PaymentprocessorAvailabilityContextPostalAddress {
	this := PaymentprocessorAvailabilityContextPostalAddress{}
	return &this
}

// NewPaymentprocessorAvailabilityContextPostalAddressWithDefaults instantiates a new PaymentprocessorAvailabilityContextPostalAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorAvailabilityContextPostalAddressWithDefaults() *PaymentprocessorAvailabilityContextPostalAddress {
	this := PaymentprocessorAvailabilityContextPostalAddress{}
	return &this
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetRegionCode() string {
	if o == nil || IsNil(o.RegionCode) {
		var ret string
		return ret
	}
	return *o.RegionCode
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetRegionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RegionCode) {
		return nil, false
	}
	return o.RegionCode, true
}

// HasRegionCode returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasRegionCode() bool {
	if o != nil && !IsNil(o.RegionCode) {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given string and assigns it to the RegionCode field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetRegionCode(v string) {
	o.RegionCode = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetFirstname returns the Firstname field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetFirstname() string {
	if o == nil || IsNil(o.Firstname) {
		var ret string
		return ret
	}
	return *o.Firstname
}

// GetFirstnameOk returns a tuple with the Firstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.Firstname) {
		return nil, false
	}
	return o.Firstname, true
}

// HasFirstname returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasFirstname() bool {
	if o != nil && !IsNil(o.Firstname) {
		return true
	}

	return false
}

// SetFirstname gets a reference to the given string and assigns it to the Firstname field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetFirstname(v string) {
	o.Firstname = &v
}

// GetLastname returns the Lastname field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetLastname() string {
	if o == nil || IsNil(o.Lastname) {
		var ret string
		return ret
	}
	return *o.Lastname
}

// GetLastnameOk returns a tuple with the Lastname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetLastnameOk() (*string, bool) {
	if o == nil || IsNil(o.Lastname) {
		return nil, false
	}
	return o.Lastname, true
}

// HasLastname returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasLastname() bool {
	if o != nil && !IsNil(o.Lastname) {
		return true
	}

	return false
}

// SetLastname gets a reference to the given string and assigns it to the Lastname field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetLastname(v string) {
	o.Lastname = &v
}

// GetAddressLines returns the AddressLines field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetAddressLines() []string {
	if o == nil || IsNil(o.AddressLines) {
		var ret []string
		return ret
	}
	return o.AddressLines
}

// GetAddressLinesOk returns a tuple with the AddressLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetAddressLinesOk() ([]string, bool) {
	if o == nil || IsNil(o.AddressLines) {
		return nil, false
	}
	return o.AddressLines, true
}

// HasAddressLines returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasAddressLines() bool {
	if o != nil && !IsNil(o.AddressLines) {
		return true
	}

	return false
}

// SetAddressLines gets a reference to the given []string and assigns it to the AddressLines field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetAddressLines(v []string) {
	o.AddressLines = v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetAdditionalInfo() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetAdditionalInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *PaymentprocessorAvailabilityContextPostalAddress) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given map[string]interface{} and assigns it to the AdditionalInfo field.
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetAdditionalInfo(v map[string]interface{}) {
	o.AdditionalInfo = v
}

func (o PaymentprocessorAvailabilityContextPostalAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorAvailabilityContextPostalAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegionCode) {
		toSerialize["regionCode"] = o.RegionCode
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.Firstname) {
		toSerialize["firstname"] = o.Firstname
	}
	if !IsNil(o.Lastname) {
		toSerialize["lastname"] = o.Lastname
	}
	if !IsNil(o.AddressLines) {
		toSerialize["addressLines"] = o.AddressLines
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentprocessorAvailabilityContextPostalAddress) UnmarshalJSON(data []byte) (err error) {
	varPaymentprocessorAvailabilityContextPostalAddress := _PaymentprocessorAvailabilityContextPostalAddress{}

	err = json.Unmarshal(data, &varPaymentprocessorAvailabilityContextPostalAddress)

	if err != nil {
		return err
	}

	*o = PaymentprocessorAvailabilityContextPostalAddress(varPaymentprocessorAvailabilityContextPostalAddress)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "regionCode")
		delete(additionalProperties, "postalCode")
		delete(additionalProperties, "firstname")
		delete(additionalProperties, "lastname")
		delete(additionalProperties, "addressLines")
		delete(additionalProperties, "additionalInfo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentprocessorAvailabilityContextPostalAddress) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PaymentprocessorAvailabilityContextPostalAddress) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePaymentprocessorAvailabilityContextPostalAddress struct {
	value *PaymentprocessorAvailabilityContextPostalAddress
	isSet bool
}

func (v NullablePaymentprocessorAvailabilityContextPostalAddress) Get() *PaymentprocessorAvailabilityContextPostalAddress {
	return v.value
}

func (v *NullablePaymentprocessorAvailabilityContextPostalAddress) Set(val *PaymentprocessorAvailabilityContextPostalAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorAvailabilityContextPostalAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorAvailabilityContextPostalAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorAvailabilityContextPostalAddress(val *PaymentprocessorAvailabilityContextPostalAddress) *NullablePaymentprocessorAvailabilityContextPostalAddress {
	return &NullablePaymentprocessorAvailabilityContextPostalAddress{value: val, isSet: true}
}

func (v NullablePaymentprocessorAvailabilityContextPostalAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorAvailabilityContextPostalAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


