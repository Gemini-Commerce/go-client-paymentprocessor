/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
	"fmt"
)

// PaymentprocessorCurrency Stands for Albania, not all ;-)
type PaymentprocessorCurrency string

// List of paymentprocessorCurrency
const (
	PAYMENTPROCESSORCURRENCY_XXX PaymentprocessorCurrency = "XXX"
	PAYMENTPROCESSORCURRENCY_ALL PaymentprocessorCurrency = "ALL"
	PAYMENTPROCESSORCURRENCY_DZD PaymentprocessorCurrency = "DZD"
	PAYMENTPROCESSORCURRENCY_ARS PaymentprocessorCurrency = "ARS"
	PAYMENTPROCESSORCURRENCY_AUD PaymentprocessorCurrency = "AUD"
	PAYMENTPROCESSORCURRENCY_BSD PaymentprocessorCurrency = "BSD"
	PAYMENTPROCESSORCURRENCY_BHD PaymentprocessorCurrency = "BHD"
	PAYMENTPROCESSORCURRENCY_BDT PaymentprocessorCurrency = "BDT"
	PAYMENTPROCESSORCURRENCY_AMD PaymentprocessorCurrency = "AMD"
	PAYMENTPROCESSORCURRENCY_BBD PaymentprocessorCurrency = "BBD"
	PAYMENTPROCESSORCURRENCY_BMD PaymentprocessorCurrency = "BMD"
	PAYMENTPROCESSORCURRENCY_BTN PaymentprocessorCurrency = "BTN"
	PAYMENTPROCESSORCURRENCY_BOB PaymentprocessorCurrency = "BOB"
	PAYMENTPROCESSORCURRENCY_BWP PaymentprocessorCurrency = "BWP"
	PAYMENTPROCESSORCURRENCY_BZD PaymentprocessorCurrency = "BZD"
	PAYMENTPROCESSORCURRENCY_SBD PaymentprocessorCurrency = "SBD"
	PAYMENTPROCESSORCURRENCY_BND PaymentprocessorCurrency = "BND"
	PAYMENTPROCESSORCURRENCY_MMK PaymentprocessorCurrency = "MMK"
	PAYMENTPROCESSORCURRENCY_BIF PaymentprocessorCurrency = "BIF"
	PAYMENTPROCESSORCURRENCY_KHR PaymentprocessorCurrency = "KHR"
	PAYMENTPROCESSORCURRENCY_CAD PaymentprocessorCurrency = "CAD"
	PAYMENTPROCESSORCURRENCY_CVE PaymentprocessorCurrency = "CVE"
	PAYMENTPROCESSORCURRENCY_KYD PaymentprocessorCurrency = "KYD"
	PAYMENTPROCESSORCURRENCY_LKR PaymentprocessorCurrency = "LKR"
	PAYMENTPROCESSORCURRENCY_CLP PaymentprocessorCurrency = "CLP"
	PAYMENTPROCESSORCURRENCY_CNY PaymentprocessorCurrency = "CNY"
	PAYMENTPROCESSORCURRENCY_COP PaymentprocessorCurrency = "COP"
	PAYMENTPROCESSORCURRENCY_KMF PaymentprocessorCurrency = "KMF"
	PAYMENTPROCESSORCURRENCY_CRC PaymentprocessorCurrency = "CRC"
	PAYMENTPROCESSORCURRENCY_HRK PaymentprocessorCurrency = "HRK"
	PAYMENTPROCESSORCURRENCY_CUP PaymentprocessorCurrency = "CUP"
	PAYMENTPROCESSORCURRENCY_CZK PaymentprocessorCurrency = "CZK"
	PAYMENTPROCESSORCURRENCY_DKK PaymentprocessorCurrency = "DKK"
	PAYMENTPROCESSORCURRENCY_DOP PaymentprocessorCurrency = "DOP"
	PAYMENTPROCESSORCURRENCY_SVC PaymentprocessorCurrency = "SVC"
	PAYMENTPROCESSORCURRENCY_ETB PaymentprocessorCurrency = "ETB"
	PAYMENTPROCESSORCURRENCY_ERN PaymentprocessorCurrency = "ERN"
	PAYMENTPROCESSORCURRENCY_FKP PaymentprocessorCurrency = "FKP"
	PAYMENTPROCESSORCURRENCY_FJD PaymentprocessorCurrency = "FJD"
	PAYMENTPROCESSORCURRENCY_DJF PaymentprocessorCurrency = "DJF"
	PAYMENTPROCESSORCURRENCY_GMD PaymentprocessorCurrency = "GMD"
	PAYMENTPROCESSORCURRENCY_GIP PaymentprocessorCurrency = "GIP"
	PAYMENTPROCESSORCURRENCY_GTQ PaymentprocessorCurrency = "GTQ"
	PAYMENTPROCESSORCURRENCY_GNF PaymentprocessorCurrency = "GNF"
	PAYMENTPROCESSORCURRENCY_GYD PaymentprocessorCurrency = "GYD"
	PAYMENTPROCESSORCURRENCY_HTG PaymentprocessorCurrency = "HTG"
	PAYMENTPROCESSORCURRENCY_HNL PaymentprocessorCurrency = "HNL"
	PAYMENTPROCESSORCURRENCY_HKD PaymentprocessorCurrency = "HKD"
	PAYMENTPROCESSORCURRENCY_HUF PaymentprocessorCurrency = "HUF"
	PAYMENTPROCESSORCURRENCY_ISK PaymentprocessorCurrency = "ISK"
	PAYMENTPROCESSORCURRENCY_INR PaymentprocessorCurrency = "INR"
	PAYMENTPROCESSORCURRENCY_IDR PaymentprocessorCurrency = "IDR"
	PAYMENTPROCESSORCURRENCY_IRR PaymentprocessorCurrency = "IRR"
	PAYMENTPROCESSORCURRENCY_IQD PaymentprocessorCurrency = "IQD"
	PAYMENTPROCESSORCURRENCY_ILS PaymentprocessorCurrency = "ILS"
	PAYMENTPROCESSORCURRENCY_JMD PaymentprocessorCurrency = "JMD"
	PAYMENTPROCESSORCURRENCY_JPY PaymentprocessorCurrency = "JPY"
	PAYMENTPROCESSORCURRENCY_KZT PaymentprocessorCurrency = "KZT"
	PAYMENTPROCESSORCURRENCY_JOD PaymentprocessorCurrency = "JOD"
	PAYMENTPROCESSORCURRENCY_KES PaymentprocessorCurrency = "KES"
	PAYMENTPROCESSORCURRENCY_KPW PaymentprocessorCurrency = "KPW"
	PAYMENTPROCESSORCURRENCY_KRW PaymentprocessorCurrency = "KRW"
	PAYMENTPROCESSORCURRENCY_KWD PaymentprocessorCurrency = "KWD"
	PAYMENTPROCESSORCURRENCY_KGS PaymentprocessorCurrency = "KGS"
	PAYMENTPROCESSORCURRENCY_LAK PaymentprocessorCurrency = "LAK"
	PAYMENTPROCESSORCURRENCY_LBP PaymentprocessorCurrency = "LBP"
	PAYMENTPROCESSORCURRENCY_LSL PaymentprocessorCurrency = "LSL"
	PAYMENTPROCESSORCURRENCY_LRD PaymentprocessorCurrency = "LRD"
	PAYMENTPROCESSORCURRENCY_LYD PaymentprocessorCurrency = "LYD"
	PAYMENTPROCESSORCURRENCY_LTL PaymentprocessorCurrency = "LTL"
	PAYMENTPROCESSORCURRENCY_MOP PaymentprocessorCurrency = "MOP"
	PAYMENTPROCESSORCURRENCY_MWK PaymentprocessorCurrency = "MWK"
	PAYMENTPROCESSORCURRENCY_MYR PaymentprocessorCurrency = "MYR"
	PAYMENTPROCESSORCURRENCY_MVR PaymentprocessorCurrency = "MVR"
	PAYMENTPROCESSORCURRENCY_MRO PaymentprocessorCurrency = "MRO"
	PAYMENTPROCESSORCURRENCY_MUR PaymentprocessorCurrency = "MUR"
	PAYMENTPROCESSORCURRENCY_MXN PaymentprocessorCurrency = "MXN"
	PAYMENTPROCESSORCURRENCY_MNT PaymentprocessorCurrency = "MNT"
	PAYMENTPROCESSORCURRENCY_MDL PaymentprocessorCurrency = "MDL"
	PAYMENTPROCESSORCURRENCY_MAD PaymentprocessorCurrency = "MAD"
	PAYMENTPROCESSORCURRENCY_OMR PaymentprocessorCurrency = "OMR"
	PAYMENTPROCESSORCURRENCY_NAD PaymentprocessorCurrency = "NAD"
	PAYMENTPROCESSORCURRENCY_NPR PaymentprocessorCurrency = "NPR"
	PAYMENTPROCESSORCURRENCY_ANG PaymentprocessorCurrency = "ANG"
	PAYMENTPROCESSORCURRENCY_AWG PaymentprocessorCurrency = "AWG"
	PAYMENTPROCESSORCURRENCY_VUV PaymentprocessorCurrency = "VUV"
	PAYMENTPROCESSORCURRENCY_NZD PaymentprocessorCurrency = "NZD"
	PAYMENTPROCESSORCURRENCY_NIO PaymentprocessorCurrency = "NIO"
	PAYMENTPROCESSORCURRENCY_NGN PaymentprocessorCurrency = "NGN"
	PAYMENTPROCESSORCURRENCY_NOK PaymentprocessorCurrency = "NOK"
	PAYMENTPROCESSORCURRENCY_PKR PaymentprocessorCurrency = "PKR"
	PAYMENTPROCESSORCURRENCY_PAB PaymentprocessorCurrency = "PAB"
	PAYMENTPROCESSORCURRENCY_PGK PaymentprocessorCurrency = "PGK"
	PAYMENTPROCESSORCURRENCY_PYG PaymentprocessorCurrency = "PYG"
	PAYMENTPROCESSORCURRENCY_PEN PaymentprocessorCurrency = "PEN"
	PAYMENTPROCESSORCURRENCY_PHP PaymentprocessorCurrency = "PHP"
	PAYMENTPROCESSORCURRENCY_QAR PaymentprocessorCurrency = "QAR"
	PAYMENTPROCESSORCURRENCY_RUB PaymentprocessorCurrency = "RUB"
	PAYMENTPROCESSORCURRENCY_RWF PaymentprocessorCurrency = "RWF"
	PAYMENTPROCESSORCURRENCY_SHP PaymentprocessorCurrency = "SHP"
	PAYMENTPROCESSORCURRENCY_STD PaymentprocessorCurrency = "STD"
	PAYMENTPROCESSORCURRENCY_SAR PaymentprocessorCurrency = "SAR"
	PAYMENTPROCESSORCURRENCY_SCR PaymentprocessorCurrency = "SCR"
	PAYMENTPROCESSORCURRENCY_SLL PaymentprocessorCurrency = "SLL"
	PAYMENTPROCESSORCURRENCY_SGD PaymentprocessorCurrency = "SGD"
	PAYMENTPROCESSORCURRENCY_VND PaymentprocessorCurrency = "VND"
	PAYMENTPROCESSORCURRENCY_SOS PaymentprocessorCurrency = "SOS"
	PAYMENTPROCESSORCURRENCY_ZAR PaymentprocessorCurrency = "ZAR"
	PAYMENTPROCESSORCURRENCY_SSP PaymentprocessorCurrency = "SSP"
	PAYMENTPROCESSORCURRENCY_SZL PaymentprocessorCurrency = "SZL"
	PAYMENTPROCESSORCURRENCY_SEK PaymentprocessorCurrency = "SEK"
	PAYMENTPROCESSORCURRENCY_CHF PaymentprocessorCurrency = "CHF"
	PAYMENTPROCESSORCURRENCY_SYP PaymentprocessorCurrency = "SYP"
	PAYMENTPROCESSORCURRENCY_THB PaymentprocessorCurrency = "THB"
	PAYMENTPROCESSORCURRENCY_TOP PaymentprocessorCurrency = "TOP"
	PAYMENTPROCESSORCURRENCY_TTD PaymentprocessorCurrency = "TTD"
	PAYMENTPROCESSORCURRENCY_AED PaymentprocessorCurrency = "AED"
	PAYMENTPROCESSORCURRENCY_TND PaymentprocessorCurrency = "TND"
	PAYMENTPROCESSORCURRENCY_UGX PaymentprocessorCurrency = "UGX"
	PAYMENTPROCESSORCURRENCY_MKD PaymentprocessorCurrency = "MKD"
	PAYMENTPROCESSORCURRENCY_EGP PaymentprocessorCurrency = "EGP"
	PAYMENTPROCESSORCURRENCY_GBP PaymentprocessorCurrency = "GBP"
	PAYMENTPROCESSORCURRENCY_TZS PaymentprocessorCurrency = "TZS"
	PAYMENTPROCESSORCURRENCY_USD PaymentprocessorCurrency = "USD"
	PAYMENTPROCESSORCURRENCY_UYU PaymentprocessorCurrency = "UYU"
	PAYMENTPROCESSORCURRENCY_UZS PaymentprocessorCurrency = "UZS"
	PAYMENTPROCESSORCURRENCY_WST PaymentprocessorCurrency = "WST"
	PAYMENTPROCESSORCURRENCY_YER PaymentprocessorCurrency = "YER"
	PAYMENTPROCESSORCURRENCY_TWD PaymentprocessorCurrency = "TWD"
	PAYMENTPROCESSORCURRENCY_CUC PaymentprocessorCurrency = "CUC"
	PAYMENTPROCESSORCURRENCY_ZWL PaymentprocessorCurrency = "ZWL"
	PAYMENTPROCESSORCURRENCY_TMT PaymentprocessorCurrency = "TMT"
	PAYMENTPROCESSORCURRENCY_GHS PaymentprocessorCurrency = "GHS"
	PAYMENTPROCESSORCURRENCY_VEF PaymentprocessorCurrency = "VEF"
	PAYMENTPROCESSORCURRENCY_SDG PaymentprocessorCurrency = "SDG"
	PAYMENTPROCESSORCURRENCY_UYI PaymentprocessorCurrency = "UYI"
	PAYMENTPROCESSORCURRENCY_RSD PaymentprocessorCurrency = "RSD"
	PAYMENTPROCESSORCURRENCY_MZN PaymentprocessorCurrency = "MZN"
	PAYMENTPROCESSORCURRENCY_AZN PaymentprocessorCurrency = "AZN"
	PAYMENTPROCESSORCURRENCY_RON PaymentprocessorCurrency = "RON"
	PAYMENTPROCESSORCURRENCY_CHE PaymentprocessorCurrency = "CHE"
	PAYMENTPROCESSORCURRENCY_CHW PaymentprocessorCurrency = "CHW"
	PAYMENTPROCESSORCURRENCY_TRY PaymentprocessorCurrency = "TRY"
	PAYMENTPROCESSORCURRENCY_XAF PaymentprocessorCurrency = "XAF"
	PAYMENTPROCESSORCURRENCY_XCD PaymentprocessorCurrency = "XCD"
	PAYMENTPROCESSORCURRENCY_XOF PaymentprocessorCurrency = "XOF"
	PAYMENTPROCESSORCURRENCY_XPF PaymentprocessorCurrency = "XPF"
	PAYMENTPROCESSORCURRENCY_XBA PaymentprocessorCurrency = "XBA"
	PAYMENTPROCESSORCURRENCY_XBB PaymentprocessorCurrency = "XBB"
	PAYMENTPROCESSORCURRENCY_XBC PaymentprocessorCurrency = "XBC"
	PAYMENTPROCESSORCURRENCY_XBD PaymentprocessorCurrency = "XBD"
	PAYMENTPROCESSORCURRENCY_XAU PaymentprocessorCurrency = "XAU"
	PAYMENTPROCESSORCURRENCY_XDR PaymentprocessorCurrency = "XDR"
	PAYMENTPROCESSORCURRENCY_XAG PaymentprocessorCurrency = "XAG"
	PAYMENTPROCESSORCURRENCY_XPT PaymentprocessorCurrency = "XPT"
	PAYMENTPROCESSORCURRENCY_XPD PaymentprocessorCurrency = "XPD"
	PAYMENTPROCESSORCURRENCY_XUA PaymentprocessorCurrency = "XUA"
	PAYMENTPROCESSORCURRENCY_ZMW PaymentprocessorCurrency = "ZMW"
	PAYMENTPROCESSORCURRENCY_SRD PaymentprocessorCurrency = "SRD"
	PAYMENTPROCESSORCURRENCY_MGA PaymentprocessorCurrency = "MGA"
	PAYMENTPROCESSORCURRENCY_COU PaymentprocessorCurrency = "COU"
	PAYMENTPROCESSORCURRENCY_AFN PaymentprocessorCurrency = "AFN"
	PAYMENTPROCESSORCURRENCY_TJS PaymentprocessorCurrency = "TJS"
	PAYMENTPROCESSORCURRENCY_AOA PaymentprocessorCurrency = "AOA"
	PAYMENTPROCESSORCURRENCY_BYR PaymentprocessorCurrency = "BYR"
	PAYMENTPROCESSORCURRENCY_BGN PaymentprocessorCurrency = "BGN"
	PAYMENTPROCESSORCURRENCY_CDF PaymentprocessorCurrency = "CDF"
	PAYMENTPROCESSORCURRENCY_BAM PaymentprocessorCurrency = "BAM"
	PAYMENTPROCESSORCURRENCY_EUR PaymentprocessorCurrency = "EUR"
	PAYMENTPROCESSORCURRENCY_MXV PaymentprocessorCurrency = "MXV"
	PAYMENTPROCESSORCURRENCY_UAH PaymentprocessorCurrency = "UAH"
	PAYMENTPROCESSORCURRENCY_GEL PaymentprocessorCurrency = "GEL"
	PAYMENTPROCESSORCURRENCY_BOV PaymentprocessorCurrency = "BOV"
	PAYMENTPROCESSORCURRENCY_PLN PaymentprocessorCurrency = "PLN"
	PAYMENTPROCESSORCURRENCY_BRL PaymentprocessorCurrency = "BRL"
	PAYMENTPROCESSORCURRENCY_CLF PaymentprocessorCurrency = "CLF"
	PAYMENTPROCESSORCURRENCY_XSU PaymentprocessorCurrency = "XSU"
	PAYMENTPROCESSORCURRENCY_USN PaymentprocessorCurrency = "USN"
)

// All allowed values of PaymentprocessorCurrency enum
var AllowedPaymentprocessorCurrencyEnumValues = []PaymentprocessorCurrency{
	"XXX",
	"ALL",
	"DZD",
	"ARS",
	"AUD",
	"BSD",
	"BHD",
	"BDT",
	"AMD",
	"BBD",
	"BMD",
	"BTN",
	"BOB",
	"BWP",
	"BZD",
	"SBD",
	"BND",
	"MMK",
	"BIF",
	"KHR",
	"CAD",
	"CVE",
	"KYD",
	"LKR",
	"CLP",
	"CNY",
	"COP",
	"KMF",
	"CRC",
	"HRK",
	"CUP",
	"CZK",
	"DKK",
	"DOP",
	"SVC",
	"ETB",
	"ERN",
	"FKP",
	"FJD",
	"DJF",
	"GMD",
	"GIP",
	"GTQ",
	"GNF",
	"GYD",
	"HTG",
	"HNL",
	"HKD",
	"HUF",
	"ISK",
	"INR",
	"IDR",
	"IRR",
	"IQD",
	"ILS",
	"JMD",
	"JPY",
	"KZT",
	"JOD",
	"KES",
	"KPW",
	"KRW",
	"KWD",
	"KGS",
	"LAK",
	"LBP",
	"LSL",
	"LRD",
	"LYD",
	"LTL",
	"MOP",
	"MWK",
	"MYR",
	"MVR",
	"MRO",
	"MUR",
	"MXN",
	"MNT",
	"MDL",
	"MAD",
	"OMR",
	"NAD",
	"NPR",
	"ANG",
	"AWG",
	"VUV",
	"NZD",
	"NIO",
	"NGN",
	"NOK",
	"PKR",
	"PAB",
	"PGK",
	"PYG",
	"PEN",
	"PHP",
	"QAR",
	"RUB",
	"RWF",
	"SHP",
	"STD",
	"SAR",
	"SCR",
	"SLL",
	"SGD",
	"VND",
	"SOS",
	"ZAR",
	"SSP",
	"SZL",
	"SEK",
	"CHF",
	"SYP",
	"THB",
	"TOP",
	"TTD",
	"AED",
	"TND",
	"UGX",
	"MKD",
	"EGP",
	"GBP",
	"TZS",
	"USD",
	"UYU",
	"UZS",
	"WST",
	"YER",
	"TWD",
	"CUC",
	"ZWL",
	"TMT",
	"GHS",
	"VEF",
	"SDG",
	"UYI",
	"RSD",
	"MZN",
	"AZN",
	"RON",
	"CHE",
	"CHW",
	"TRY",
	"XAF",
	"XCD",
	"XOF",
	"XPF",
	"XBA",
	"XBB",
	"XBC",
	"XBD",
	"XAU",
	"XDR",
	"XAG",
	"XPT",
	"XPD",
	"XUA",
	"ZMW",
	"SRD",
	"MGA",
	"COU",
	"AFN",
	"TJS",
	"AOA",
	"BYR",
	"BGN",
	"CDF",
	"BAM",
	"EUR",
	"MXV",
	"UAH",
	"GEL",
	"BOV",
	"PLN",
	"BRL",
	"CLF",
	"XSU",
	"USN",
}

func (v *PaymentprocessorCurrency) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PaymentprocessorCurrency(value)
	for _, existing := range AllowedPaymentprocessorCurrencyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PaymentprocessorCurrency", value)
}

// NewPaymentprocessorCurrencyFromValue returns a pointer to a valid PaymentprocessorCurrency
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPaymentprocessorCurrencyFromValue(v string) (*PaymentprocessorCurrency, error) {
	ev := PaymentprocessorCurrency(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PaymentprocessorCurrency: valid values are %v", v, AllowedPaymentprocessorCurrencyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PaymentprocessorCurrency) IsValid() bool {
	for _, existing := range AllowedPaymentprocessorCurrencyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to paymentprocessorCurrency value
func (v PaymentprocessorCurrency) Ptr() *PaymentprocessorCurrency {
	return &v
}

type NullablePaymentprocessorCurrency struct {
	value *PaymentprocessorCurrency
	isSet bool
}

func (v NullablePaymentprocessorCurrency) Get() *PaymentprocessorCurrency {
	return v.value
}

func (v *NullablePaymentprocessorCurrency) Set(val *PaymentprocessorCurrency) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorCurrency) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorCurrency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorCurrency(val *PaymentprocessorCurrency) *NullablePaymentprocessorCurrency {
	return &NullablePaymentprocessorCurrency{value: val, isSet: true}
}

func (v NullablePaymentprocessorCurrency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorCurrency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

