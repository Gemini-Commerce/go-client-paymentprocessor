/*
Payment Processor Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paymentprocessor

import (
	"encoding/json"
)

// checks if the PaymentprocessorPaymentContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentprocessorPaymentContext{}

// PaymentprocessorPaymentContext struct for PaymentprocessorPaymentContext
type PaymentprocessorPaymentContext struct {
	BillingAddress *PaymentprocessorPostalAddress `json:"billingAddress,omitempty"`
	ShippingAddress *PaymentprocessorPostalAddress `json:"shippingAddress,omitempty"`
	OrderInfo *PaymentContextOrderInfo `json:"orderInfo,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaymentprocessorPaymentContext PaymentprocessorPaymentContext

// NewPaymentprocessorPaymentContext instantiates a new PaymentprocessorPaymentContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentprocessorPaymentContext() *PaymentprocessorPaymentContext {
	this := PaymentprocessorPaymentContext{}
	return &this
}

// NewPaymentprocessorPaymentContextWithDefaults instantiates a new PaymentprocessorPaymentContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentprocessorPaymentContextWithDefaults() *PaymentprocessorPaymentContext {
	this := PaymentprocessorPaymentContext{}
	return &this
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentContext) GetBillingAddress() PaymentprocessorPostalAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret PaymentprocessorPostalAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentContext) GetBillingAddressOk() (*PaymentprocessorPostalAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentContext) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given PaymentprocessorPostalAddress and assigns it to the BillingAddress field.
func (o *PaymentprocessorPaymentContext) SetBillingAddress(v PaymentprocessorPostalAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentContext) GetShippingAddress() PaymentprocessorPostalAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret PaymentprocessorPostalAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentContext) GetShippingAddressOk() (*PaymentprocessorPostalAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentContext) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given PaymentprocessorPostalAddress and assigns it to the ShippingAddress field.
func (o *PaymentprocessorPaymentContext) SetShippingAddress(v PaymentprocessorPostalAddress) {
	o.ShippingAddress = &v
}

// GetOrderInfo returns the OrderInfo field value if set, zero value otherwise.
func (o *PaymentprocessorPaymentContext) GetOrderInfo() PaymentContextOrderInfo {
	if o == nil || IsNil(o.OrderInfo) {
		var ret PaymentContextOrderInfo
		return ret
	}
	return *o.OrderInfo
}

// GetOrderInfoOk returns a tuple with the OrderInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentprocessorPaymentContext) GetOrderInfoOk() (*PaymentContextOrderInfo, bool) {
	if o == nil || IsNil(o.OrderInfo) {
		return nil, false
	}
	return o.OrderInfo, true
}

// HasOrderInfo returns a boolean if a field has been set.
func (o *PaymentprocessorPaymentContext) HasOrderInfo() bool {
	if o != nil && !IsNil(o.OrderInfo) {
		return true
	}

	return false
}

// SetOrderInfo gets a reference to the given PaymentContextOrderInfo and assigns it to the OrderInfo field.
func (o *PaymentprocessorPaymentContext) SetOrderInfo(v PaymentContextOrderInfo) {
	o.OrderInfo = &v
}

func (o PaymentprocessorPaymentContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentprocessorPaymentContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.OrderInfo) {
		toSerialize["orderInfo"] = o.OrderInfo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaymentprocessorPaymentContext) UnmarshalJSON(data []byte) (err error) {
	varPaymentprocessorPaymentContext := _PaymentprocessorPaymentContext{}

	err = json.Unmarshal(data, &varPaymentprocessorPaymentContext)

	if err != nil {
		return err
	}

	*o = PaymentprocessorPaymentContext(varPaymentprocessorPaymentContext)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "billingAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "orderInfo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PaymentprocessorPaymentContext) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PaymentprocessorPaymentContext) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePaymentprocessorPaymentContext struct {
	value *PaymentprocessorPaymentContext
	isSet bool
}

func (v NullablePaymentprocessorPaymentContext) Get() *PaymentprocessorPaymentContext {
	return v.value
}

func (v *NullablePaymentprocessorPaymentContext) Set(val *PaymentprocessorPaymentContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentprocessorPaymentContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentprocessorPaymentContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentprocessorPaymentContext(val *PaymentprocessorPaymentContext) *NullablePaymentprocessorPaymentContext {
	return &NullablePaymentprocessorPaymentContext{value: val, isSet: true}
}

func (v NullablePaymentprocessorPaymentContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentprocessorPaymentContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


